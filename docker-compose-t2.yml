---
# yamllint disable rule:line-length
## Line length rules do not make sense for this file. Comments have still
## been limited to 80 character line length whenever possible.

############################## NETWORKS
## There is no need to create any networks outside this docker-compose file.
## You may customize the network subnets (192.168.90.0/24, 91.0/24, 250.0/24)
## below as you please.
## Docker Compose version 3.5 or higher required to define networks this way.
##
## Note: to enable IPv6 on the bridge network, follow the steps at
## https://docs.docker.com/config/daemon/ipv6/#use-ipv6-for-the-default-bridge-network

networks:
  t2_proxy:
    name: t2_proxy
    driver: bridge
    enable_ipv6: true
    ipam:
      config:
        - subnet: $T2_PROXY_SUBNET
          gateway: $T2_PROXY_GATEWAY
        - subnet: $T2_PROXY_IPV6_SUBNET
  socket_proxy:
    name: socket_proxy
    driver: bridge
    enable_ipv6: true
    ipam:
      config:
        - subnet: $SOCKET_PROXY_SUBNET
          gateway: $SOCKET_PROXY_GATEWAY
        - subnet: $SOCKET_PROXY_IPV6_SUBNET
  gluetun_net:
    name: gluetun_net
    driver: bridge
    enable_ipv6: true
    ipam:
      config:
        - subnet: $GLUETUN_SUBNET
          gateway: $GLUETUN_GATEWAY
        - subnet: $GLUETUN_IPV6_SUBNET
  default:
    driver: bridge

############################## SECRETS
secrets:
  authelia_duo_api_secret_key:
    file: $SECRETSDIR/authelia_duo_api_secret_key
  authelia_identity_validation_reset_password_jwt_secret_file: # https://www.grc.com/passwords.htm
    file: $SECRETSDIR/authelia_identity_validation_reset_password_jwt_secret_file
  authelia_notifier_smtp_password:
    file: $SECRETSDIR/authelia_notifier_smtp_password
  authelia_session_redis_password:
    file: $SECRETSDIR/authelia_session_redis_password
  authelia_session_secret:
    file: $SECRETSDIR/authelia_session_secret
  authelia_storage_encryption_key:
    file: $SECRETSDIR/authelia_storage_encryption_key
  authelia_storage_mysql_password:
    file: $SECRETSDIR/authelia_storage_mysql_password
  authentik_email__password:
    file: $SECRETSDIR/authentik_email__password
  authentik_postgresql__name:
    file: $SECRETSDIR/authentik_postgresql__name
  authentik_postgresql__user:
    file: $SECRETSDIR/authentik_postgresql__user
  authentik_postgresql__password:
    file: $SECRETSDIR/authentik_postgresql__password
  authentik_redis__password:
    file: $SECRETSDIR/authentik_redis__password
  authentik_secret_key:
    file: $SECRETSDIR/authentik_secret_key
  authentik_token_ldap:
    file: $SECRETSDIR/authentik_token_ldap
  cloudflare_api_key:
    file: $SECRETSDIR/cloudflare_api_key
  cloudflare_ddns_api_token: # Currently unsupported
    file: $SECRETSDIR/cloudflare_ddns_api_token
  cloudflare_email:
    file: $SECRETSDIR/cloudflare_email
  firefly_iii_access_token:
    file: $SECRETSDIR/firefly_iii_access_token
  firefly_mail_server_password:
    file: $SECRETSDIR/firefly_mail_server_password
  firefly_mysql_db_name:
    file: $SECRETSDIR/firefly_mysql_db_name
  firefly_mysql_user:
    file: $SECRETSDIR/firefly_mysql_user
  firefly_mysql_password:
    file: $SECRETSDIR/firefly_mysql_password
  gluetun_openvpn_user:
    file: $SECRETSDIR/gluetun_openvpn_user
  gluetun_openvpn_password:
    file: $SECRETSDIR/gluetun_openvpn_password
  gotify_database_connection:
    file: $SECRETSDIR/gotify_database_connection
  gotify_defaultuser_name:
    file: $SECRETSDIR/gotify_defaultuser_name
  gotify_defaultuser_pass:
    file: $SECRETSDIR/gotify_defaultuser_pass
  guac_db_name:
    file: $SECRETSDIR/guac_db_name
  guac_mysql_user:
    file: $SECRETSDIR/guac_mysql_user
  guac_mysql_password:
    file: $SECRETSDIR/guac_mysql_password
  htpasswd:
    file: $SECRETSDIR/htpasswd
  keycloak_admin:
    file: $SECRETSDIR/keycloak_admin
  keycloak_admin_password:
    file: $SECRETSDIR/keycloak_admin_password
  kc_db_username:
    file: $SECRETSDIR/kc_db_username
  kc_db_password:
    file: $SECRETSDIR/kc_db_password
  mysql_root_password:
    file: $SECRETSDIR/mysql_root_password
  nextcloud_admin_user:
    file: $SECRETSDIR/nextcloud_admin_user
  nextcloud_admin_password:
    file: $SECRETSDIR/nextcloud_admin_password
  nextcloud_mysql_user:
    file: $SECRETSDIR/nextcloud_mysql_user
  nextcloud_mysql_password:
    file: $SECRETSDIR/nextcloud_mysql_password
  nextcloud_smtp_name: # Currently unsupported
    file: $SECRETSDIR/nextcloud_smtp_name
  nextcloud_smtp_password: # Currently unsupported
    file: $SECRETSDIR/nextcloud_smtp_password
  plex_claim:
    file: $SECRETSDIR/plex_claim
  postgres_user:
    file: $SECRETSDIR/postgres_user
  postgres_password:
    file: $SECRETSDIR/postgres_password
  qbittorrent_user:
    file: $SECRETSDIR/qbittorrent_user
  qbittorrent_pass:
    file: $SECRETSDIR/qbittorrent_pass
  redis_password:
    file: $SECRETSDIR/redis_password
  vaultwarden_admin_token:
    file: $SECRETSDIR/vaultwarden_admin_token
  vaultwarden_duo_host:
    file: $SECRETSDIR/vaultwarden_duo_host
  vaultwarden_duo_ikey:
    file: $SECRETSDIR/vaultwarden_duo_ikey
  vaultwarden_duo_skey:
    file: $SECRETSDIR/vaultwarden_duo_skey
  vaultwarden_mysql_url:
    file: $SECRETSDIR/vaultwarden_mysql_url
  vaultwarden_smtp_password:
    file: $SECRETSDIR/vaultwarden_smtp_password
  vaultwarden_yubico_client_id:
    file: $SECRETSDIR/vaultwarden_yubico_client_id
  vaultwarden_yubico_secret_key:
    file: $SECRETSDIR/vaultwarden_yubico_secret_key
  vscode_password:
    file: $SECRETSDIR/vscode_password
  vscode_sudo_password:
    file: $SECRETSDIR/vscode_sudo_password
  watchtower_notification_email_server_password:
    file: $SECRETSDIR/watchtower_notification_email_server_password

########################### EXTENSION FIELDS
## Helps eliminate repetition of sections
## More Info on how to use this:
## https://github.com/htpcBeginner/docker-traefik/pull/228

## Common environment values
x-environment: &default-tz-puid-pgid
  TZ: $TZ
  PUID: $PUID
  PGID: $PGID

## Proxy Network and Security
x-network-and-security: &network-and-security
  networks:
    - t2_proxy
  security_opt:
    - no-new-privileges:true

## Keys common to some of the services in basic-services.txt
x-common-keys-core: &common-keys-core
  <<: *network-and-security
  restart: always
  # profiles:
  # - basic

## Keys common to some of the dependent services/apps
x-common-keys-apps: &common-keys-apps
  <<: *network-and-security
  restart: unless-stopped
  # profiles:
  # - apps

## Keys common to some of the services in media-services.txt
x-common-keys-media: &common-keys-media
  <<: *network-and-security
  restart: "no"
  # profiles:
  # - media

include:
  ############################## SERVICES
  ## Frontends
  - compose/traefik.yml
  - compose/socket-proxy.yml
  - compose/heimdall.yml
  # - compose/organizr.yml
  ## Security
  - compose/authelia.yml
  # - compose/keycloak.yml
  - compose/authentik.yml
  ## Databases
  - compose/mariadb.yml
  - compose/postgres.yml
  - compose/phpmyadmin.yml
  - compose/adminer.yml
  - compose/redis.yml
  - compose/rediscommander.yml
  ## Media server
  ### Downloads
  - compose/qbit.yml
  - compose/qbit-private.yml
  - compose/qbit-temp.yml
  ### Indexers
  - compose/prowlarr.yml
  # - compose/flaresolverr.yml
  ### Monitoring
  - compose/tautulli.yml
  ### Personal media recorders
  - compose/radarr.yml
  - compose/radarr-4k.yml
  - compose/sonarr.yml
  - compose/sonarr-4k.yml
  - compose/recyclarr.yml
  - compose/lidarr.yml
  ### Requests
  - compose/
  ## Services
  - compose/cf-ddns.yml
  - compose/duckdns.yml
  - compose/docker-gc.yml
  - compose/watchtower.yml
  - compose/vscode.yml
  - compose/filebrowser.yml
  - compose/guacamole.yml
  - compose/dozzle.yml
  - compose/glances.yml
  - compose/dupeguru.yml
  - compose/tdarr.yml
  - compose/tdarr-node.yml
  - compose/gotify.yml
  ## Web
  - compose/vaultwarden.yml
  - compose/nextcloud.yml
  - compose/firefly.yml
  # - compose/portfolio.yml
  - whoami.yml
  ## VPN
  - compose/wireguard.yml
  - compose/gluetun.yml
  - compose/gluetun-private.yml
  - compose/gluetun-temp.yml
  ## Network services
  # - compose/pi-hole.yml
  - compose/unbound.yml
  - compose/ntp.yml
  ## Minecraft
  # - compose/minecraft.yml
  # - compoase/mc-backup.yml
  # - compose/minecraft-rcon.yml
  ## Miscellaneous
  # - compose/bluebubbles.yml

############################## SERVICES
services:
  ## Ombi - Request Management System
  ombi:
    <<: *common-keys-apps
    image: lscr.io/linuxserver/ombi:latest
    container_name: ombi
    # ports:
    #   - $OMBI_PORT:3579
    environment:
      <<: *default-tz-puid-pgid
      # BASE_URL: /ombi  # Optional
    volumes:
      - $APPDIR/ombi/config:/config
      # - $DATADIR/downloads:/data/downloads
      # - $DATADIR/media:/data/media
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.ombi-rtr.entrypoints=https"
      - "traefik.http.routers.ombi-rtr.rule=Host(`ombi.$DOMAINNAME0`)"
      - "traefik.http.routers.ombi-rtr.tls.options=tls-opts@file"
      ## Middlewares
      - "traefik.http.routers.ombi-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.ombi-rtr.service=ombi-svc"
      - "traefik.http.services.ombi-svc.loadbalancer.server.port=3579"

  ## Maintainerr
  maintainerr:
    <<: *common-keys-apps
    image: ghcr.io/jorenn92/maintainerr:latest
    container_name: maintainerr
    volumes:
      - $APPDIR/maintainerr/config:/opt/data
    environment:
      API_PORT: 3001
      UI_PORT: 6246
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.maintainerr-rtr.entrypoints=https"
      - "traefik.http.routers.maintainerr-rtr.rule=Host(`maintainerr.$DOMAINNAME0`)"
      - "traefik.http.routers.maintainerr-rtr.tls.options=tls-opts@file"
      ## Middlewares
      - "traefik.http.routers.maintainerr-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.maintainerr-rtr.service=maintainerr-svc"
      - "traefik.http.services.maintainerr-svc.loadbalancer.server.port=6246"

  ############################# MEDIA
  ## Jellyfin - Free Software Media System
  jellyfin:
    <<: *common-keys-apps # See EXTENSION FIELDS at the top
    image: jellyfin/jellyfin:latest # Issues with hardware transcoding with linuxserver.io image
    container_name: jellyfin
    devices:
      # - /dev/dri:/dev/dri  # AMD hardware transcoding?
      - /dev/dri/renderD128:/dev/dri/renderD128
      - /dev/dri/card1:/dev/dri/card0
    group_add:
      - $RENDER_GROUP # Add render group permission to allow GPU render access
    ports:
      - $JELLYFIN_PORT:8096
      # - 8920:8920  # optional - HTTPS WebUI
      - 7359:7359/udp # optional - Allows clients to discover Jellyfin on the local network
      - 1900:1900/udp # optional - Service discovery used by DNLA and clients
    volumes:
      - $APPDIR/jellyfin/config:/config
      - $APPDIR/jellyfin/config/web-config.json:/jellyfin/jellyfin-web/config.json
      - $DATADIR/temp/appdata/jellyfin/metadata:/config/metadata
      - $DATADIR/downloads:/data/downloads
      - $DATADIR/media:/data/media
      # - /dev/shm:/data/transcode  # Perform transcoding in RAM
      - /$APPDIR/jellyfin/transcodes:/data/transcode # Perform transcoding on SSD
    environment:
      <<: *default-tz-puid-pgid
      UMASK: 022
      # JELLYFIN_PublishedServerUrl: "https://$DOMAINNAME0"  # optional
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.jellyfin-rtr.entrypoints=https"
      - "traefik.http.routers.jellyfin-rtr.rule=Host(`jellyfin.$DOMAINNAME0`)"
      - "traefik.http.routers.jellyfin-rtr.tls.options=tls-opts@file"
      ## Middlewares
      - "traefik.http.routers.jellyfin-rtr.middlewares=chain-authelia@file,jellyfin-remove-bypass-cache"
      - "traefik.http.middlewares.jellyfin-remove-bypass-cache.stripPrefix.prefixes=/bypass_cache"
      # - "traefik.http.middlewares.jellyfin-add-slash.addPrefix.prefix=/"
      ## HTTP Services
      - "traefik.http.routers.jellyfin-rtr.service=jellyfin-svc"
      - "traefik.http.services.jellyfin-svc.loadbalancer.server.port=8096"

  # Plex - Media Server
  # Moved to Synology hosted (Intel QuickSync)
  # plex:
  #   <<: *common-keys-apps # See EXTENSION FIELDS at the top
  #   image: lscr.io/linuxserver/plex:latest
  #   container_name: plex
  #   ports:
  #     # - "$PLEX_PORT:32400/tcp"  # Web host proxied via Traefik
  #     # - "1900:1900/udp"  # DLNA - Conflicts with Jellyfin, xTeVe, and Synology default ports
  #     - "3005:3005/tcp"
  #     # - "5353:5353/udp"
  #     - "8324:8324/tcp"
  #     - "32410:32410/udp"
  #     - "32412:32412/udp"
  #     - "32413:32413/udp"
  #     - "32414:32414/udp"
  #     - "32469:32469/tcp"
  #     # - "33400:33400" # If you use Plex Web Tools
  #   devices:
  #     - /dev/dri:/dev/dri  # AMD hardware transcoding?
  #     - /dev/dri/renderD128:/dev/dri/renderD128
  #     - /dev/dri/card0:/dev/dri/card0
  #   volumes:
  #     - $DOCKERDIR/appdata/plex:/config
  #     - $DATADIR/media:/media
  #     - /dev/shm:/transcode  # Perform transcoding in RAM
  #   environment:
  #     <<: *default-tz-puid-pgid
  #     PLEX_CLAIM: /run/secrets/plex_claim
  #     VERSION: docker
  #   secrets:
  #     - plex_claim
  #   labels:
  #     - "traefik.enable=true"
  #     ## HTTP Routers
  #     - "traefik.http.routers.plex-rtr.entrypoints=https"
  #     - "traefik.http.routers.plex-rtr.rule=Host(`plex.$DOMAINNAME0`)"
  #     ## Middlewares
  #     - "traefik.http.routers.plex-rtr.middlewares=chain-authelia@file,plex-remove-bypass-cache"
  #     - "traefik.http.middlewares.plex-remove-bypass-cache.stripPrefix.prefixes=/bypass_cache"
  #     ## HTTP Services
  #     - "traefik.http.routers.plex-rtr.service=plex-svc"
  #     - "traefik.http.services.plex-svc.loadbalancer.server.port=32400"

  calibre:
    <<: *common-keys-apps
    image: lscr.io/linuxserver/calibre:latest
    container_name: calibre
    devices:
      - /dev/dri:/dev/dri
    # ports:
    #   - $CALIBRE_PORT:$CALIBRE_PORT
    #   - $CALIBRE_HTTPS_PORT:$CALIBRE_HTTPS_PORT
    #   - $CALIBRE_WEB_PORT:8081
    security_opt:
      - seccomp:unconfined # Required for some setups
    environment:
      <<: *default-tz-puid-pgid
      # CLI_ARGS:  # Optional
      CUSTOM_PORT: $CALIBRE_PORT
      # CUSTOM_HTTPS_PORT: $CALIBRE_HTTPS_PORT
      # CUSTOM_USER:
      # PASSWORD:  # Use reverse proxy authentication instead
      # SUBFOLDER:
      TITLE: Calibre
      FM_HOME: /import
      START_DOCKER: # Set to FALSE to disable DinD Docker setup
      DRI_NODE: /dev/dri/renderD128
    volumes:
      - $APPDIR/calibre/config:/config
      - "$DATADIR/media/Calibre Library:/books"
      - $DATADIR/torrents-private/books:/import:ro
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.calibre-rtr.entrypoints=https"
      - "traefik.http.routers.calibre-rtr.rule=Host(`calibre.$DOMAINNAME0`)"
      - "traefik.http.routers.calibre-rtr.tls.options=tls-opts@file"
      ## Middlewares
      - "traefik.http.routers.calibre-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.calibre-rtr.service=calibre-svc"
      - "traefik.http.services.calibre-svc.loadbalancer.server.port=$CALIBRE_PORT"

  ## Calibre-Web - A web app that offers a clean and intuitive interface for browsing, reading, and downloading eBooks using a valid Calibre database
  calibre-web:
    <<: *common-keys-apps
    image: lscr.io/linuxserver/calibre-web:latest
    container_name: calibre-web
    # ports:
    #   - $CALIBRE_WEB_PORT:8083
    environment:
      <<: *default-tz-puid-pgid
      DOCKER_MODS: linuxserver/mods:universal-calibre
    volumes:
      - $APPDIR/calibre-web/config:/config
      - "$DATADIR/media/Calibre Library:/books"
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.calibre-web-rtr.entrypoints=https"
      - "traefik.http.routers.calibre-web-rtr.rule=Host(`calibre-web.$DOMAINNAME0`)"
      - "traefik.http.routers.calibre-web-rtr.tls.options=tls-opts@file"
      ## Middlewares
      - "traefik.http.routers.calibre-web-rtr.middlewares=chain-no-auth@file"
      ## HTTP Services
      - "traefik.http.routers.calibre-web-rtr.service=calibre-web-svc"
      - "traefik.http.services.calibre-web-svc.loadbalancer.server.port=8083"

  # audiobookshelf - Self-hosted audiobook and podcast server
  audiobookshelf:
    <<: *common-keys-apps # See EXTENSION FIELDS at the top
    image: ghcr.io/advplyr/audiobookshelf:latest
    container_name: audiobookshelf
    # ports:
    #   - $AUDIOBOOKSHELF_PORT:13378
    volumes:
      - $APPDIR/audiobookshelf/config:/config
      - $DATADIR/media/audiobooks:/audiobooks
      - $DATADIR/media/podcasts:/podcasts
      - $APPDIR/audiobookshelf/metadata:/metadata # Could be in $DATADIR to minimize storage usage on host
    environment:
      # HOST: 127.0.0.1
      PORT: $AUDIOBOOKSHELF_PORT
      SOURCE: docker
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.audiobookshelf-rtr.entrypoints=https"
      - "traefik.http.routers.audiobookshelf-rtr.rule=Host(`abs.$DOMAINNAME0`)"
      - "traefik.http.routers.audiobookshelf-rtr.tls.options=tls-opts@file"
      ## Middlewares
      - "traefik.http.routers.audiobookshelf-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.audiobookshelf-rtr.service=audiobookshelf-svc"
      - "traefik.http.services.audiobookshelf-svc.loadbalancer.server.port=$AUDIOBOOKSHELF_PORT"

  ############################# MEDIA FILE MANAGEMENT

  # Bazarr - Subtitle Management
  bazarr:
    <<: *common-keys-apps # See EXTENSION FIELDS at the top
    image: lscr.io/linuxserver/bazarr
    container_name: bazarr
    networks:
      t2_proxy:
        ipv4_address: $BAZARR_IPV4
    # ports:
    #   - $BAZARR_PORT:6767
    volumes:
      - $APPDIR/bazarr/config:/config
      - $DATADIR/media:/data/media
    environment:
      <<: *default-tz-puid-pgid
    labels:
      - "traefik.enable=true"
      ## HTTP Routers API Auth Bypass
      - "traefik.http.routers.bazarr-rtr-bypass.entrypoints=https"
      - "traefik.http.routers.bazarr-rtr-bypass.rule=Host(`bazarr.$DOMAINNAME0`) && (Header(`X-Api-Key`, `$BAZARR_API_KEY`) || Query(`apikey`, `$BAZARR_API_KEY`))"
      - "traefik.http.routers.bazarr-rtr-bypass.tls.options=tls-opts@file"
      - "traefik.http.routers.bazarr-rtr-bypass.priority=100"
      ## HTTP Routers
      - "traefik.http.routers.bazarr-rtr.entrypoints=https"
      - "traefik.http.routers.bazarr-rtr.rule=Host(`bazarr.$DOMAINNAME0`)"
      - "traefik.http.routers.bazarr-rtr.tls.options=tls-opts@file"
      - "traefik.http.routers.bazarr-rtr.priority=99"
      ## Middlewares
      - "traefik.http.routers.bazarr-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.bazarr-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.bazarr-rtr-bypass.service=bazarr-svc"
      - "traefik.http.routers.bazarr-rtr.service=bazarr-svc"
      - "traefik.http.services.bazarr-svc.loadbalancer.server.port=6767"

  # Handbrake - Video Conversion (Transcoding and compression)
  handbrake:
    <<: *common-keys-apps # See EXTENSION FIELDS at the top
    image: jlesage/handbrake:latest
    container_name: handbrake
    # ports:
    #   - "$HANDBRAKE_PORT:$HANDBRAKE_PORT"
    volumes:
      - $DATADIR:/data
      - $APPDIR/handbrake/config:/config
      # - $APPDIR/handbrake/watch:/watch
    environment:
      <<: *default-tz-puid-pgid
      USER_ID: $PUID
      GROUP_ID: $PGID
      UMASK: 002
      KEEP_APP_RUNNING: 1
      CLEAN_TMP_DIR: 1
      DISPLAY_WIDTH: 1600
      DISPLAY_HEIGHT: 960
      AUTOMATED_CONVERSION_KEEP_SOURCE: 1
      # VNC_PASSWORD: $HANDBRAKE_VNC_PASSWD
      WEB_LISTENING_PORT: $HANDBRAKE_PORT
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.handbrake-rtr.entrypoints=https"
      - "traefik.http.routers.handbrake-rtr.rule=Host(`handbrake.$DOMAINNAME0`)"
      - "traefik.http.routers.handbrake-rtr.tls.options=tls-opts@file"
      ## Middlewares
      - "traefik.http.routers.handbrake-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.handbrake-rtr.service=handbrake-svc"
      - "traefik.http.services.handbrake-svc.loadbalancer.server.port=$HANDBRAKE_PORT"

  ############################## MONITORING

  # New Relic - Infrastructure and container monitoring
  # https://docs.newrelic.com/docs/infrastructure/install-infrastructure-agent/linux-installation/container-infrastructure-monitoring/
  newrelic-infra:
    image: newrelic/infrastructure:latest
    container_name: newrelic-infra
    cap_add:
      - SYS_PTRACE # Allows the agent to gather data about processes running on the host
    network_mode: host # Allows the agent to collect the network metrics about the host.
    pid: host # Required to monitor host processes / performance
    privileged: true # Required to monitor host processes / performance
    restart: unless-stopped
    volumes:
      - "/:/host:ro" # Allows the agent to collect process and storage metrics as well as Inventory data from the host
      - "/var/run/docker.sock:/var/run/docker.sock" # Allows the agent to connect to the Engine API via the Docker daemon socket to collect the host's container data
    environment:
      NRIA_LICENSE_KEY: $NRIA_LICENSE_KEY
