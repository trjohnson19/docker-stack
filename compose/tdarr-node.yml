---
services:
  ## Tdarr - Distributed transcode automation
  tdarr-node:
    container_name: tdarr-node
    image: ghcr.io/haveagitgat/tdarr_node:latest
    privileged: true
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    devices:
      ## AMD hardware transcoding
      - /dev/dri:/dev/dri
      # - /dev/dri/renderD128:/dev/dri/renderD128
      # - /dev/dri/card0:/dev/dri/card0
    ports:
      - $TDARR_NODE_PORT:$TDARR_NODE_PORT # Node port
    environment:
      UMASK_SET: 02
      serverIP: tdarr
      serverPort: $TDARR_SERVER_PORT
      nodeID: NucNode
      nodeIP: tdarr-node # Container name of the node
      nodePort: $TDARR_NODE_PORT
    volumes:
      - $APPDIR/tdarr/configs:/app/configs
      - $APPDIR/tdarr/logs:/app/logs
      ## Map single folder for `/data` and use `/data/media` and
      ## `/data/temp/transcode` to allow for move operation instead of copy
      - $DATADIR:/data
      # - $DATADIR/temp/transcode:/data/temp/transcode
      # - /dev/shm:/temp  # Perform transcoding in RAM
    logging:
      options:
        max-size: "2m"
        max-file: "3"
    # labels:  # Not needed for the node
    #   - "traefik.enable=true"
    #   ## HTTP Routers
    #   - "traefik.http.routers.tdarr-node-rtr.entrypoints=https"
    #   - "traefik.http.routers.tdarr-node-rtr.rule=Host(`tdarr-node.$DOMAINNAME0`)"
    #   ## Middlewares
    #   - "traefik.http.routers.tdarr-node-rtr.middlewares=chain-authelia@file"
    #   ## HTTP Services
    #   - "traefik.http.routers.tdarr-node-rtr.service=tdarr-node-svc"
    #   - "traefik.http.services.tdarr-node-svc.loadbalancer.server.port=$TDARR_NODE_PORT"
