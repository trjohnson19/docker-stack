---
# yamllint disable rule:line-length
## Line length rules do not make sense for this file. Comments have still
## been limited to 80 character line length whenever possible.

############################## NETWORKS
## There is no need to create any networks outside this docker-compose file.
## You may customize the network subnets (192.168.90.0/24, 91.0/24, 250.0/24)
## below as you please.
## Docker Compose version 3.5 or higher required to define networks this way.
##
## Note: to enable IPv6 on the bridge network, follow the steps at
## https://docs.docker.com/config/daemon/ipv6/#use-ipv6-for-the-default-bridge-network

networks:
  t2_proxy:
    name: t2_proxy
    driver: bridge
    enable_ipv6: true
    ipam:
      config:
        - subnet: $T2_PROXY_SUBNET
          gateway: $T2_PROXY_GATEWAY
        - subnet: $T2_PROXY_IPV6_SUBNET
  socket_proxy:
    name: socket_proxy
    driver: bridge
    enable_ipv6: true
    ipam:
      config:
        - subnet: $SOCKET_PROXY_SUBNET
          gateway: $SOCKET_PROXY_GATEWAY
        - subnet: $SOCKET_PROXY_IPV6_SUBNET
  gluetun_net:
    name: gluetun_net
    driver: bridge
    enable_ipv6: true
    ipam:
      config:
        - subnet: $GLUETUN_SUBNET
          gateway: $GLUETUN_GATEWAY
        - subnet: $GLUETUN_IPV6_SUBNET
  default:
    driver: bridge

############################## SECRETS
secrets:
  authelia_duo_api_secret_key:
    file: $SECRETSDIR/authelia_duo_api_secret_key
  authelia_identity_validation_reset_password_jwt_secret_file: # https://www.grc.com/passwords.htm
    file: $SECRETSDIR/authelia_identity_validation_reset_password_jwt_secret_file
  authelia_notifier_smtp_password:
    file: $SECRETSDIR/authelia_notifier_smtp_password
  authelia_session_redis_password:
    file: $SECRETSDIR/authelia_session_redis_password
  authelia_session_secret:
    file: $SECRETSDIR/authelia_session_secret
  authelia_storage_encryption_key:
    file: $SECRETSDIR/authelia_storage_encryption_key
  authelia_storage_mysql_password:
    file: $SECRETSDIR/authelia_storage_mysql_password
  authentik_email__password:
    file: $SECRETSDIR/authentik_email__password
  authentik_postgresql__name:
    file: $SECRETSDIR/authentik_postgresql__name
  authentik_postgresql__user:
    file: $SECRETSDIR/authentik_postgresql__user
  authentik_postgresql__password:
    file: $SECRETSDIR/authentik_postgresql__password
  authentik_redis__password:
    file: $SECRETSDIR/authentik_redis__password
  authentik_secret_key:
    file: $SECRETSDIR/authentik_secret_key
  authentik_token_ldap:
    file: $SECRETSDIR/authentik_token_ldap
  cloudflare_api_key:
    file: $SECRETSDIR/cloudflare_api_key
  cloudflare_ddns_api_token: # Currently unsupported
    file: $SECRETSDIR/cloudflare_ddns_api_token
  cloudflare_email:
    file: $SECRETSDIR/cloudflare_email
  firefly_iii_access_token:
    file: $SECRETSDIR/firefly_iii_access_token
  firefly_mail_server_password:
    file: $SECRETSDIR/firefly_mail_server_password
  firefly_mysql_db_name:
    file: $SECRETSDIR/firefly_mysql_db_name
  firefly_mysql_user:
    file: $SECRETSDIR/firefly_mysql_user
  firefly_mysql_password:
    file: $SECRETSDIR/firefly_mysql_password
  gluetun_openvpn_user:
    file: $SECRETSDIR/gluetun_openvpn_user
  gluetun_openvpn_password:
    file: $SECRETSDIR/gluetun_openvpn_password
  gotify_database_connection:
    file: $SECRETSDIR/gotify_database_connection
  gotify_defaultuser_name:
    file: $SECRETSDIR/gotify_defaultuser_name
  gotify_defaultuser_pass:
    file: $SECRETSDIR/gotify_defaultuser_pass
  guac_db_name:
    file: $SECRETSDIR/guac_db_name
  guac_mysql_user:
    file: $SECRETSDIR/guac_mysql_user
  guac_mysql_password:
    file: $SECRETSDIR/guac_mysql_password
  htpasswd:
    file: $SECRETSDIR/htpasswd
  keycloak_admin:
    file: $SECRETSDIR/keycloak_admin
  keycloak_admin_password:
    file: $SECRETSDIR/keycloak_admin_password
  kc_db_username:
    file: $SECRETSDIR/kc_db_username
  kc_db_password:
    file: $SECRETSDIR/kc_db_password
  mysql_root_password:
    file: $SECRETSDIR/mysql_root_password
  nextcloud_admin_user:
    file: $SECRETSDIR/nextcloud_admin_user
  nextcloud_admin_password:
    file: $SECRETSDIR/nextcloud_admin_password
  nextcloud_mysql_user:
    file: $SECRETSDIR/nextcloud_mysql_user
  nextcloud_mysql_password:
    file: $SECRETSDIR/nextcloud_mysql_password
  nextcloud_smtp_name: # Currently unsupported
    file: $SECRETSDIR/nextcloud_smtp_name
  nextcloud_smtp_password: # Currently unsupported
    file: $SECRETSDIR/nextcloud_smtp_password
  plex_claim:
    file: $SECRETSDIR/plex_claim
  postgres_user:
    file: $SECRETSDIR/postgres_user
  postgres_password:
    file: $SECRETSDIR/postgres_password
  qbittorrent_user:
    file: $SECRETSDIR/qbittorrent_user
  qbittorrent_pass:
    file: $SECRETSDIR/qbittorrent_pass
  redis_password:
    file: $SECRETSDIR/redis_password
  vaultwarden_admin_token:
    file: $SECRETSDIR/vaultwarden_admin_token
  vaultwarden_duo_host:
    file: $SECRETSDIR/vaultwarden_duo_host
  vaultwarden_duo_ikey:
    file: $SECRETSDIR/vaultwarden_duo_ikey
  vaultwarden_duo_skey:
    file: $SECRETSDIR/vaultwarden_duo_skey
  vaultwarden_mysql_url:
    file: $SECRETSDIR/vaultwarden_mysql_url
  vaultwarden_smtp_password:
    file: $SECRETSDIR/vaultwarden_smtp_password
  vaultwarden_yubico_client_id:
    file: $SECRETSDIR/vaultwarden_yubico_client_id
  vaultwarden_yubico_secret_key:
    file: $SECRETSDIR/vaultwarden_yubico_secret_key
  vscode_password:
    file: $SECRETSDIR/vscode_password
  vscode_sudo_password:
    file: $SECRETSDIR/vscode_sudo_password
  watchtower_notification_email_server_password:
    file: $SECRETSDIR/watchtower_notification_email_server_password

########################### EXTENSION FIELDS
## Helps eliminate repetition of sections
## More Info on how to use this:
## https://github.com/htpcBeginner/docker-traefik/pull/228

## Common environment values
x-environment: &default-tz-puid-pgid
  TZ: $TZ
  PUID: $PUID
  PGID: $PGID

## Proxy Network and Security
x-network-and-security: &network-and-security
  networks:
    - t2_proxy
  security_opt:
    - no-new-privileges:true

## Keys common to some of the services in basic-services.txt
x-common-keys-core: &common-keys-core
  <<: *network-and-security
  restart: always
  # profiles:
  # - basic

## Keys common to some of the dependent services/apps
x-common-keys-apps: &common-keys-apps
  <<: *network-and-security
  restart: unless-stopped
  # profiles:
  # - apps

## Keys common to some of the services in media-services.txt
x-common-keys-media: &common-keys-media
  <<: *network-and-security
  restart: "no"
  # profiles:
  # - media

include:
  ############################## SERVICES
  ## Frontends
  - compose/traefik.yml
  - compose/socket-proxy.yml
  - compose/heimdall.yml
  # - compose/organizr.yml
  ## Security
  - compose/authelia.yml
  # - compose/keycloak.yml
  - compose/authentik.yml
  ## Databases
  - compose/mariadb.yml
  - compose/postgres.yml
  - compose/phpmyadmin.yml
  - compose/adminer.yml
  - compose/redis.yml
  - compose/rediscommander.yml
  ## Media server
  ### Downloads
  - compose/qbit.yml
  - compose/qbit-private.yml
  - compose/qbit-temp.yml
  ### Indexers
  - compose/prowlarr.yml
  # - compose/flaresolverr.yml
  ### Monitoring
  - compose/tautulli.yml
  ### Personal media recorders
  - compose/radarr.yml
  - compose/radarr-4k.yml
  - compose/sonarr.yml
  - compose/sonarr-4k.yml
  - compose/recyclarr.yml
  - compose/maintainerr.yml
  - compose/audiobookshelf.yml
  - compose/calibre.yml
  - compose/calibre-web.yml
  - compose/lidarr.yml
  ### Requests
  - compose/overseerr.yml
  - compose/ombi.yml
  ### Servers
  - compose/jellyfin.yml
  ## Moved plex to Synology hosted (Intel QuickSync)
  # - compose/plex.yml
  ## Services
  - compose/cf-ddns.yml
  - compose/duckdns.yml
  - compose/docker-gc.yml
  - compose/watchtower.yml
  - compose/vscode.yml
  - compose/filebrowser.yml
  - compose/guacamole.yml
  - compose/dozzle.yml
  - compose/glances.yml
  - compose/dupeguru.yml
  - compose/tdarr.yml
  - compose/tdarr-node.yml
  - compose/gotify.yml
  ## Web
  - compose/vaultwarden.yml
  - compose/nextcloud.yml
  - compose/firefly.yml
  # - compose/portfolio.yml
  - whoami.yml
  ## VPN
  - compose/wireguard.yml
  - compose/gluetun.yml
  - compose/gluetun-private.yml
  - compose/gluetun-temp.yml
  ## Network services
  # - compose/pi-hole.yml
  - compose/unbound.yml
  - compose/ntp.yml
  ## Minecraft
  # - compose/minecraft.yml
  # - compoase/mc-backup.yml
  # - compose/minecraft-rcon.yml
  ## Miscellaneous
  # - compose/bluebubbles.yml

############################## SERVICES
services:
  ############################# MEDIA FILE MANAGEMENT

  # Bazarr - Subtitle Management
  bazarr:
    <<: *common-keys-apps # See EXTENSION FIELDS at the top
    image: lscr.io/linuxserver/bazarr
    container_name: bazarr
    networks:
      t2_proxy:
        ipv4_address: $BAZARR_IPV4
    # ports:
    #   - $BAZARR_PORT:6767
    volumes:
      - $APPDIR/bazarr/config:/config
      - $DATADIR/media:/data/media
    environment:
      <<: *default-tz-puid-pgid
    labels:
      - "traefik.enable=true"
      ## HTTP Routers API Auth Bypass
      - "traefik.http.routers.bazarr-rtr-bypass.entrypoints=https"
      - "traefik.http.routers.bazarr-rtr-bypass.rule=Host(`bazarr.$DOMAINNAME0`) && (Header(`X-Api-Key`, `$BAZARR_API_KEY`) || Query(`apikey`, `$BAZARR_API_KEY`))"
      - "traefik.http.routers.bazarr-rtr-bypass.tls.options=tls-opts@file"
      - "traefik.http.routers.bazarr-rtr-bypass.priority=100"
      ## HTTP Routers
      - "traefik.http.routers.bazarr-rtr.entrypoints=https"
      - "traefik.http.routers.bazarr-rtr.rule=Host(`bazarr.$DOMAINNAME0`)"
      - "traefik.http.routers.bazarr-rtr.tls.options=tls-opts@file"
      - "traefik.http.routers.bazarr-rtr.priority=99"
      ## Middlewares
      - "traefik.http.routers.bazarr-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.bazarr-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.bazarr-rtr-bypass.service=bazarr-svc"
      - "traefik.http.routers.bazarr-rtr.service=bazarr-svc"
      - "traefik.http.services.bazarr-svc.loadbalancer.server.port=6767"

  # Handbrake - Video Conversion (Transcoding and compression)
  handbrake:
    <<: *common-keys-apps # See EXTENSION FIELDS at the top
    image: jlesage/handbrake:latest
    container_name: handbrake
    # ports:
    #   - "$HANDBRAKE_PORT:$HANDBRAKE_PORT"
    volumes:
      - $DATADIR:/data
      - $APPDIR/handbrake/config:/config
      # - $APPDIR/handbrake/watch:/watch
    environment:
      <<: *default-tz-puid-pgid
      USER_ID: $PUID
      GROUP_ID: $PGID
      UMASK: 002
      KEEP_APP_RUNNING: 1
      CLEAN_TMP_DIR: 1
      DISPLAY_WIDTH: 1600
      DISPLAY_HEIGHT: 960
      AUTOMATED_CONVERSION_KEEP_SOURCE: 1
      # VNC_PASSWORD: $HANDBRAKE_VNC_PASSWD
      WEB_LISTENING_PORT: $HANDBRAKE_PORT
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.handbrake-rtr.entrypoints=https"
      - "traefik.http.routers.handbrake-rtr.rule=Host(`handbrake.$DOMAINNAME0`)"
      - "traefik.http.routers.handbrake-rtr.tls.options=tls-opts@file"
      ## Middlewares
      - "traefik.http.routers.handbrake-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.handbrake-rtr.service=handbrake-svc"
      - "traefik.http.services.handbrake-svc.loadbalancer.server.port=$HANDBRAKE_PORT"

  ############################## MONITORING

  # New Relic - Infrastructure and container monitoring
  # https://docs.newrelic.com/docs/infrastructure/install-infrastructure-agent/linux-installation/container-infrastructure-monitoring/
  newrelic-infra:
    image: newrelic/infrastructure:latest
    container_name: newrelic-infra
    cap_add:
      - SYS_PTRACE # Allows the agent to gather data about processes running on the host
    network_mode: host # Allows the agent to collect the network metrics about the host.
    pid: host # Required to monitor host processes / performance
    privileged: true # Required to monitor host processes / performance
    restart: unless-stopped
    volumes:
      - "/:/host:ro" # Allows the agent to collect process and storage metrics as well as Inventory data from the host
      - "/var/run/docker.sock:/var/run/docker.sock" # Allows the agent to connect to the Engine API via the Docker daemon socket to collect the host's container data
    environment:
      NRIA_LICENSE_KEY: $NRIA_LICENSE_KEY
