---
http:
  middlewares:
    middlewares-basic-auth:
      basicAuth:
        # users:
        #   - "user:$
        ## Be sure to mount the volume through docker-compose.yml
        usersFile: "/shared/.htpasswd"
        realm: "Traefik 2 Basic Auth"


    middlewares-rate-limit:
      rateLimit:
        average: 100
        burst: 50


    middlewares-secure-headers:
      headers:
        accessControlAllowMethods:
          - GET
          - OPTIONS
          - PUT
        accessControlMaxAge: 100
        hostsProxyHeaders:
          - "X-Forwarded-Host"
        stsSeconds: 63072000
        stsIncludeSubdomains: true
        stsPreload: true
        forceSTSHeader: true
        # frameDeny: true  # Overwritten by customFrameOptionsValue
        ## CSP takes care of this but may be needed for organizr.
        customFrameOptionsValue: 'allow-from https:{{env "DOMAINNAME0"}}'
        contentTypeNosniff: true
        browserXssFilter: true
        # sslForceHost: true  # Add sslHost to all of the services
        # sslHost: "{{env "DOMAINNAME0"}}"
        referrerPolicy: "same-origin"
        ## Setting contentSecurityPolicy is more secure but it can break
        ## things. Proper auth will reduce the risk. The below line also breaks
        ## some apps due to 'none' - sonarr, radarr, etc.
        ## yamllint disable-line rule:line-length
        # contentSecurityPolicy: "frame-ancestors '*.{{env "DOMAINNAME0"}}:*';object-src 'none';script-src 'none';"
        ## yamllint disable-line rule:line-length
        permissionsPolicy: "camera 'none'; geolocation 'none'; microphone 'none'; payment 'none'; usb 'none'; vr 'none';"
        customResponseHeaders:
          X-Robots-Tag: "none,noarchive,nosnippet,notranslate,noimageindex,"
          server: ""


    middlewares-authelia0:
      forwardAuth:
        ## yamllint disable-line rule:line-length
        address: 'http://authelia0:9091/api/verify?rd=https://auth.{{env "DOMAINNAME0"}}'
        trustForwardHeader: true
        authResponseHeaders:
          - "Remote-User"
          - "Remote-Groups"
          - "Remote-Name"
          - "Remote-Email"


    middlewares-keycloak:
      forwardAuth:
        address: 'http://keycloak:9092'
        trustForwardHeader: true
        authResponseHeaders:
          - "Remote-User"
          - "Remote-Groups"
          - "Remote-Name"
          - "Remote-Email"
          - "Forwarded"
          - "X-Forwarded-For"
          - "X-Forwarded-Proto"
          - "X-Forwarded-Host"
          - "X-Forwarded-Port"
          - "X-Forwarded-User"


    ## yamllint disable-line rule:line-length
    ## https://github.com/goauthentik/authentik/issues/2366#issuecomment-1159442127
    middlewares-authentik:
      forwardAuth:
        address: 'http://authentik:9000/outpost.goauthentik.io/auth/traefik'
        trustForwardHeader: true
        authResponseHeaders:
          - X-authentik-username
          - X-authentik-groups
          - X-authentik-email
          - X-authentik-name
          - X-authentik-uid
          - X-authentik-jwt
          - X-authentik-meta-jwks
          - X-authentik-meta-outpost
          - X-authentik-meta-provider
          - X-authentik-meta-app
          - X-authentik-meta-version


    # middlewares-oauth:
    #   forwardAuth:
    #     ## Make sure you have the OAuth service in docker-compose.yml
    #     address: "http://oauth:4181"
    #     trustForwardHeader: true
    #     authResponseHeaders:
    #       - "X-Forwarded-User"
...
