# yaml-language-server: $schema=https://www.authelia.com/schemas/v4.38/json-schema/configuration.json
# yamllint disable rule:comments-indentation
# yamllint disable rule:line-length
---
###############################################################################
#                           Authelia Configuration                            #
###############################################################################

##
## Notes:
##
##    - the default location of this file is assumed to be configuration.yml unless otherwise noted
##    - when using docker the container expects this by default to be at /config/configuration.yml
##    - the default location where this file is loaded from can be overridden with the X_AUTHELIA_CONFIG environment var
##    - the comments in this configuration file are helpful but users should consult the official documentation on the
##      website at https://www.authelia.com/ or https://www.authelia.com/configuration/prologue/introduction/
##    - this configuration file template is not automatically updated
##

##
## Access Control Configuration
##
## Access control is a list of rules defining the authorizations applied for one resource to users or group of users.
##
## If 'access_control' is not defined, ACL rules are disabled and the 'bypass' rule is applied, i.e., access is allowed
## to anyone. Otherwise restrictions follow the rules defined.
##
## Note: One can use the wildcard * to match any subdomain.
## It must stand at the beginning of the pattern. (example: *.example.com)
##
## Note: You must put patterns containing wildcards between simple quotes for the YAML to be syntactically correct.
##
## Definition: A 'rule' is an object with the following keys: 'domain', 'subject', 'policy' and 'resources'.
##
## - 'domain' defines which domain or set of domains the rule applies to.
##
## - 'subject' defines the subject to apply authorizations to. This parameter is optional and matching any user if not
##    provided. If provided, the parameter represents either a user or a group. It should be of the form
##    'user:<username>' or 'group:<groupname>'.
##
## - 'policy' is the policy to apply to resources. It must be either 'bypass', 'one_factor', 'two_factor' or 'deny'.
##
## - 'resources' is a list of regular expressions that matches a set of resources to apply the policy to. This parameter
##   is optional and matches any resource if not provided.
##
## Note: the order of the rules is important. The first policy matching (domain, resource, subject) applies.
access_control:
  ## Default policy can either be 'bypass', 'one_factor', 'two_factor' or 'deny'. It is the policy applied to any
  ## resource if there is no policy to be applied to the user.
  default_policy: "two_factor" # Use default 2FA to avoid having to create new entries for new services

  # networks:
  # - name: 'internal'
  # networks:
  # - '10.10.0.0/16'
  # - '192.168.1.0/24'
  # - name: 'VPN'
  #   networks: '10.9.0.0/16'

  rules:
    ## Rules applied to everyone
    # Authorization domain
    - domain:
        - auth.example.com
      policy: bypass

    # Must bypass to allow apps to work
    - domain:
        - drive.example.com
      policy: bypass

    # Must bypass to allow cache bypass
    - domain:
        - example.com
        - p.example.com
        - plex.example.com
        - j.example.com
        - jelly.example.com
        - jellyfin.example.com
      policy: bypass

    # Bypass to allow external access (secured by own authorization)
    - domain:
        - request.example.com
        - ombi.example.com
        - overseerr.example.com
        - tautulli.example.com
      policy: bypass

    # Dashboard domains
    - domain:
        - dash.example.com
        - heimdall.example.com
      policy: bypass

    # Add extra security to Vaultwarden admin page
    - domain:
        - vault.example.com
      resources:
        - "admin"
      policy: two_factor

    # Bypass to allow apps to work
    - domain:
        - vault.example.com
      resources:
        - "notifications/hub"
      policy: bypass

    # Bypass to allow apps to work
    - domain:
        - vault.example.com
      policy: bypass

    # Bypass to allow healthcheck to work
    - domain:
        - traefik.example.com
      resources:
        - "ping"
      policy: bypass

    # Bypass to allow apps to work
    - domain:
        - hass.example.com
      policy: bypass

    # Bypass to allow apps to work
    - domain:
        - abs.example.com
      policy: bypass
